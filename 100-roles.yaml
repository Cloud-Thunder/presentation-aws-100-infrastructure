Resources:
  CodeDeployTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Sid: '1'
          Effect: Allow
          Principal:
            Service: codedeploy.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
  CodeDeployRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeDeployPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Resource:
          - "*"
          Action:
          - ec2:Describe*
        - Effect: Allow
          Resource:
          - "*"
          Action:
          - autoscaling:CompleteLifecycleAction
          - autoscaling:DeleteLifecycleHook
          - autoscaling:DescribeLifecycleHooks
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:PutLifecycleHook
          - autoscaling:RecordLifecycleActionHeartbeat
      Roles:
      - Ref: CodeDeployTrustRole
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  InstanceRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstanceRole
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - autoscaling:Describe*
          - cloudformation:Describe*
          - cloudformation:GetTemplate
          - s3:Get*
          - ec2:AssociateAddress
          - cloudwatch:PutMetricData
          - cloudwatch:GetMetricStatistics
          - cloudwatch:ListMetrics
          - ec2:DescribeTags
          Resource: "*"
      Roles:
      - Ref: InstanceRole
  CodeDeployIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codedeploy.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
  CodePipelineIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codepipeline.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            - arn:aws:s3:::elasticbeanstalk*
            Effect: Allow
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
            - codebuild:*
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          - Action:
            - opsworks:CreateDeployment
            - opsworks:DescribeApps
            - opsworks:DescribeCommands
            - opsworks:DescribeDeployments
            - opsworks:DescribeInstances
            - opsworks:DescribeStacks
            - opsworks:UpdateApp
            - opsworks:UpdateStack
            Resource: "*"
            Effect: Allow
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: "CodeBuildPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Resource:
              - arn:aws:logs:*
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            - Effect: Allow
              Resource:
              - arn:aws:s3:::*
              Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            - Effect: Allow
              Resource:
              - arn:aws:codecommit:*
              Action:
              - codecommit:GitPull
Outputs:
  CodeDeployTrustRole:
    Value: !Ref CodeDeployTrustRole
    Export:
      Name: CodeDeployTrustRole
  InstanceRole:
    Value: !Ref InstanceRole
    Export:
      Name:  InstanceRole
  CodeDeployIAMRoleArn:
    Value: !GetAtt CodeDeployIAMRole.Arn
    Export:
      Name:  CodeDeployIAMRoleArn
  CodePipelineIAMRoleArn:
    Value: !GetAtt CodePipelineIAMRole.Arn
    Export:
      Name:  CodePipelineIAMRoleArn
  CodeBuildRole:
    Value: !Ref CodeBuildRole
    Export:
      Name:  CodeBuildRole